services:
  # Node.js 애플리케이션
  app:
    container_name: x-clone-backend
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    depends_on:
      - mongo
      - redis
    networks:
      - app-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: bash -c "pnpm start:dev"

  # MongoDB Replica Set
  mongo:
    container_name: x-clone-mongo
    image: mongo:6.0
    ports:
      - 27017:27017
    command:
      - mongod
      - --replSet
      - rs0
      - --bind_ip_all
    healthcheck:
      test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongosh --quiet) -eq 1
      interval: 10s
      start_period: 30s
    networks:
      - app-network

  # Redis
  redis:
    container_name: x-clone-redis
    image: redis:7.0-alpine
    ports:
      - 6379:6379
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis_data:/data
    networks:
      - app-network

volumes:
  redis_data:

networks:
  app-network:
    driver: bridge
